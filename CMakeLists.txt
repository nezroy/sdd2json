cmake_minimum_required(VERSION 2.8)
project(sdd2json)

set(CMAKE_MODULE_PATH "${sdd2json_SOURCE_DIR}/CMake")

find_package(ODBC REQUIRED)
if(NOT ODBC_FOUND)
	message(FATAL_ERROR "Could not find ODBC")
endif()

set(SQLITE3_DEFDIR "${sdd2json_SOURCE_DIR}/libs/sqlite-3.8.4.3")
find_package(SQLITE3 REQUIRED)
include_directories(${SQLITE3_DIR})
add_library(sqlite3 STATIC ${SQLITE3_SOURCE})
if(WIN32)
	set_target_properties(sqlite3 PROPERTIES COMPILE_FLAGS "/DSQLITE_WIN32_MALLOC /DSQLITE_OMIT_LOAD_EXTENSION /DSQLITE_THREADSAFE=0 /D_USING_V110_SDK71_=1")
else()
	set_target_properties(sqlite3 PROPERTIES COMPILE_FLAGS "-DSQLITE_OMIT_LOAD_EXTENSION -DSQLITE_THREADSAFE=0")
endif()

set(YAML_DEFDIR "${sdd2json_SOURCE_DIR}/libs/yaml-0.1.5")
find_package(YAML REQUIRED)
include_directories("${YAML_DIR}/include")
add_library(yaml STATIC ${YAML_SOURCE})
if(WIN32)
	include_directories("${YAML_DIR}/win32")
	set_target_properties(yaml PROPERTIES COMPILE_FLAGS "/DHAVE_CONFIG_H /DYAML_DECLARE_STATIC /D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE")
else()
	set_target_properties(yaml PROPERTIES COMPILE_FLAGS "-DHAVE_CONFIG_H -DYAML_DECLARE_STATIC")
endif()

set(ZLIB_DEFDIR "${sdd2json_SOURCE_DIR}/libs/zlib-1.2.8")
find_package(ZLIB REQUIRED)
include_directories("${ZLIB_DIR}")
add_library(zlib STATIC ${ZLIB_SOURCE})
if(WIN32)
	# include_directories("${GZIP_DIR}/win32")
	set_target_properties(zlib PROPERTIES COMPILE_FLAGS "/D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE /DMAX_WBITS=15 /DMAX_MEM_LEVEL=9")
else()
	set_target_properties(zlib PROPERTIES COMPILE_FLAGS "-DMAX_WBITS=15 -DMAX_MEM_LEVEL=9")
endif()

# find_package(JANSSON REQUIRED)

include_directories(${ODBC_INCLUDE_DIR} "${sdd2json_SOURCE_DIR}/libs")

add_executable(sdd2json libs/getopt.c libs/strlcat.c libs/strlcpy.c compat.h sdd2json.h sdd2json.c map.h map.c inv.h inv.c)
if(WIN32)
	set_target_properties(sdd2json PROPERTIES COMPILE_FLAGS "/D_CRT_SECURE_NO_WARNINGS /D_USING_V110_SDK71_=1")
endif()
#if(MSVC)
#	set_target_properties(sdd2json PROPERTIES COMPILE_FLAGS "/Za")
#endif(MSVC)
target_link_libraries(sdd2json sqlite3 yaml zlib ${ODBC_LIBRARY})
